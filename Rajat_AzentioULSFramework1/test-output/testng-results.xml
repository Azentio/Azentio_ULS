<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-02T11:06:43 IST" name="Default suite" finished-at="2022-12-02T11:06:56 IST" duration-ms="12682">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@3f191845]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-12-02T11:06:43 IST" name="Default test" finished-at="2022-12-02T11:06:56 IST" duration-ms="12682">
      <class name="Runner.TestApplication">
        <test-method is-config="true" signature="beforeExecution()[pri:0, instance:Runner.TestApplication@3f191845]" started-at="2022-12-02T11:06:43 IST" name="beforeExecution" finished-at="2022-12-02T11:06:43 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeExecution -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.TestApplication@3f191845]" started-at="2022-12-02T11:06:43 IST" name="setUpClass" finished-at="2022-12-02T11:06:45 IST" duration-ms="1442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestApplication@3f191845]" started-at="2022-12-02T11:06:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-12-02T11:06:53 IST" duration-ms="8184" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["To Verify System should allow user to do a modification on already saved record"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing the functionalities of Beneficiary Details In Application Creation]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 105
Current browser version is 99.0.4844.82 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'PG00X8LN', ip: '10.1.47.115', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 105
Current browser version is 99.0.4844.82 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'PG00X8LN', ip: '10.1.47.115', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:244)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:166)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:89)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:99)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:86)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:41)
at resources.BaseClass.initializeDriver(BaseClass.java:28)
at stepdefinitions.HooksClass.browserSetup(HooksClass.java:32)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.TestApplication@3f191845]" started-at="2022-12-02T11:06:53 IST" name="tearDownClass" finished-at="2022-12-02T11:06:56 IST" duration-ms="2992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterExecution()[pri:0, instance:Runner.TestApplication@3f191845]" started-at="2022-12-02T11:06:56 IST" name="afterExecution" finished-at="2022-12-02T11:06:56 IST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterExecution -->
      </class> <!-- Runner.TestApplication -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
